{"version":3,"sources":["webpack:///./src/components/HASTNode.tsx","webpack:///./src/templates/TemplateMarkdownPage.tsx"],"names":["COMPONENTS","h1","props","Typography","as","variant","h2","h3","children","p","a","Link","ul","List","li","HASTNode","node","type","map","childNode","index","key","Component","tagName","properties","value","TemplateMarkdownPageContainer","styled","Section","theme","spacing","TemplateMarkdownPage","htmlAst","data","markdownRemark","Layout","Container"],"mappings":"8QAKMA,EAAa,CACjBC,GAAI,SAACC,GAAD,OACF,gBAACC,EAAA,EAAD,eAAYC,GAAG,KAAKC,QAAQ,MAASH,KAEvCI,GAAI,SAACJ,GAAD,OACF,gBAACC,EAAA,EAAD,eAAYC,GAAG,KAAKC,QAAQ,MAASH,KAEvCK,GAAI,gBAAGC,EAAH,EAAGA,SAAaN,EAAhB,mCACF,gBAACC,EAAA,EAAD,eAAYC,GAAG,KAAKC,QAAQ,SAAYH,GACtC,8BAASM,KAGbC,EAAG,SAACP,GAAD,OAA0C,gBAACC,EAAA,EAAeD,IAC7DQ,EAAG,SAACR,GAAD,OAA0C,gBAACS,EAAA,EAAST,IACvDU,GAAI,SAACV,GAAD,OAA0C,gBAACW,EAAA,EAASX,IACxDY,GAAI,SAACZ,GAAD,OAA0C,gBAACW,EAAA,EAAaX,KAwBvD,SAASa,EAAT,GAA2C,IAAvBC,EAAuB,EAAvBA,KACzB,OAAQA,EAAKC,MACX,IAAK,OACH,OACE,gCACGD,EAAKR,SAASU,KAAI,SAACC,EAAWC,GAAZ,OACjB,gBAACL,EAAD,CAAUM,IAAKD,EAAOJ,KAAMG,QAIpC,IAAK,UAAW,MACRG,EAAS,UAAGtB,EAAWgB,EAAKO,gBAAnB,QAA+BP,EAAKO,QAEnD,OACE,gBAACD,EAAcN,EAAKQ,WACjBR,EAAKR,SAASU,KAAI,SAACC,EAAWC,GAAZ,OACjB,gBAACL,EAAD,CAAUM,IAAKD,EAAOJ,KAAMG,QAKpC,IAAK,OACL,QACE,OAAO,gCAAGH,EAAKS,Q,4DC9DfC,G,UAAgCC,YAAOC,KAAV,0GAAGD,CAAH,yGAGd,SAACzB,GAAD,OAAWA,EAAM2B,MAAMC,QAAQ,MAKlC,SAAC5B,GAAD,OAAWA,EAAM2B,MAAMC,QAAQ,MAC5B,SAAC5B,GAAD,OAAWA,EAAM2B,MAAMC,QAAQ,MAK/B,SAAC5B,GAAD,OAAWA,EAAM2B,MAAMC,QAAQ,OAYrC,SAASC,EAAT,GAIe,IAFRC,EAEQ,EAH5BC,KACEC,eAAkBF,QAGpB,OACE,kBAACG,EAAA,EAAD,KACE,kBAACT,EAAD,KACE,kBAACU,EAAA,EAAD,KACE,kBAACrB,EAAD,CAAUC,KAAMgB","file":"component---src-templates-template-markdown-page-tsx-d3c5062c2ce748c9a9d9.js","sourcesContent":["import * as React from \"react\";\nimport { Typography } from \"./Typography\";\nimport { Link } from \"./Link\";\nimport { List, ListItem } from \"./List\";\n\nconst COMPONENTS = {\n  h1: (props: { children: React.ReactNode }) => (\n    <Typography as=\"h1\" variant=\"h1\" {...props} />\n  ),\n  h2: (props: { children: React.ReactNode }) => (\n    <Typography as=\"h2\" variant=\"h2\" {...props} />\n  ),\n  h3: ({ children, ...props }: { children: React.ReactNode }) => (\n    <Typography as=\"h3\" variant=\"body1\" {...props}>\n      <strong>{children}</strong>\n    </Typography>\n  ),\n  p: (props: { children: React.ReactNode }) => <Typography {...props} />,\n  a: (props: { children: React.ReactNode }) => <Link {...props} />,\n  ul: (props: { children: React.ReactNode }) => <List {...props} />,\n  li: (props: { children: React.ReactNode }) => <ListItem {...props} />,\n};\n\nexport interface HASTRoot {\n  type: \"root\";\n  children: Array<HASTElement | HASTText>;\n}\n\ninterface HASTElement {\n  type: \"element\";\n  tagName: keyof JSX.IntrinsicElements;\n  properties: Record<string, any>;\n  children: Array<HASTElement | HASTText>;\n}\n\ninterface HASTText {\n  type: \"text\";\n  value: string;\n}\n\ninterface HASTNodeProps {\n  node: HASTRoot | HASTElement | HASTText;\n}\n\nexport function HASTNode({ node }: HASTNodeProps) {\n  switch (node.type) {\n    case \"root\":\n      return (\n        <>\n          {node.children.map((childNode, index) => (\n            <HASTNode key={index} node={childNode} />\n          ))}\n        </>\n      );\n    case \"element\": {\n      const Component = COMPONENTS[node.tagName] ?? node.tagName;\n\n      return (\n        <Component {...node.properties}>\n          {node.children.map((childNode, index) => (\n            <HASTNode key={index} node={childNode} />\n          ))}\n        </Component>\n      );\n    }\n    case \"text\":\n    default:\n      return <>{node.value}</>;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { graphql } from \"gatsby\";\nimport { Layout, Container, Section, HASTRoot, HASTNode } from \"../components\";\n\nconst TemplateMarkdownPageContainer = styled(Section)`\n  h1 {\n    margin-top: 0;\n    margin-bottom: ${(props) => props.theme.spacing(4)};\n  }\n\n  h2,\n  h3 {\n    margin-top: ${(props) => props.theme.spacing(4)};\n    margin-bottom: ${(props) => props.theme.spacing(2)};\n  }\n\n  p,\n  ul {\n    margin-bottom: ${(props) => props.theme.spacing(1)};\n  }\n`;\n\ninterface TemplateMarkdownPageProps {\n  data: {\n    markdownRemark: {\n      htmlAst: HASTRoot;\n    };\n  };\n}\n\nexport default function TemplateMarkdownPage({\n  data: {\n    markdownRemark: { htmlAst },\n  },\n}: TemplateMarkdownPageProps) {\n  return (\n    <Layout>\n      <TemplateMarkdownPageContainer>\n        <Container>\n          <HASTNode node={htmlAst} />\n        </Container>\n      </TemplateMarkdownPageContainer>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query GetPageContent($url: String!) {\n    markdownRemark(frontmatter: { url: { eq: $url } }) {\n      htmlAst\n    }\n  }\n`;\n"],"sourceRoot":""}